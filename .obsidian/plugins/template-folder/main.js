/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
var h=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var E=(t,e)=>{for(var r in e)h(t,r,{get:e[r],enumerable:!0})},O=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of F(e))!T.call(t,o)&&o!==r&&h(t,o,{get:()=>e[o],enumerable:!(n=v(e,o))||n.enumerable});return t};var _=t=>O(h({},"__esModule",{value:!0}),t);var M={};E(M,{default:()=>g});module.exports=_(M);var l=require("obsidian");function y(t,e){let r=Object.keys(e).map(n=>A(t,n,e[n]));return r.length===1?r[0]:function(){r.forEach(n=>n())}}function A(t,e,r){let n=t[e],o=t.hasOwnProperty(e),p=o?n:function(){return Object.getPrototypeOf(t)[e].apply(this,arguments)},a=r(p);return n&&Object.setPrototypeOf(a,n),Object.setPrototypeOf(i,a),t[e]=i,u;function i(...s){return a===p&&t[e]===i&&u(),a.apply(this,s)}function u(){t[e]===i&&(o?t[e]=p:delete t[e]),a!==p&&(a=p,Object.setPrototypeOf(i,n||Function))}}var P={propertyName:"folder",removeProperty:!0},g=class extends l.Plugin{constructor(){super(...arguments);this.monkey_patches=[]}async onload(){var n;await this.loadSettings();let r=this.settings;this.addSettingTab(new f(this.app,this)),(n=this.app.internalPlugins.getPluginById("templates"))!=null&&n.enabled&&this.monkey_patches.push(y(Object.getPrototypeOf(this.app.internalPlugins.getEnabledPluginById("templates")),{insertTemplate:o=>async function(p){try{let a=this.app,i=a.workspace.getActiveFile();if(!i)return;let u=await a.vault.cachedRead(p),s=S(this,u);await a.vault.modify(i,s);let c=a.metadataCache.getFileCache(p);if(!c||!c.frontmatter)return;let m=c.frontmatter[r.propertyName];if(typeof m!="string"){console.error("Template Folder Property has to be of type 'text'!"),new l.Notice("Template Folder Property has to be of type 'text'!");return}let d=D(m);if(a.vault.getFolderByPath(d)||await a.vault.createFolder(d),await a.fileManager.renameFile(i,N([m,i.name])),!r.removeProperty||!i)return;await a.fileManager.processFrontMatter(i,w=>{delete w[r.propertyName]})}catch(a){new l.Notice(a)}}}))}async onunload(){for(let r of this.monkey_patches)r()}async loadSettings(){this.settings=Object.assign({},P,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},f=class extends l.PluginSettingTab{constructor(e,r){super(e,r),this.plugin=r}display(){let{containerEl:e}=this;e.empty(),new l.Setting(e).setName("Template folder property").setDesc("Name of the frontmatter property in templates that defines where notes should be moved.").addText(r=>r.setPlaceholder(P.propertyName).setValue(this.plugin.settings.propertyName).onChange(n=>{this.plugin.settings.propertyName=n,this.plugin.saveSettings(),this.display()})),new l.Setting(e).setName("Remove property").setDesc("Remove the template folder property when applying the template to a note.").addToggle(r=>r.setValue(this.plugin.settings.removeProperty).onChange(n=>{this.plugin.settings.removeProperty=n,this.plugin.saveSettings(),this.display()}))}};function D(t){return t.replace(/[/\\]+$/g,"")}function N(t){let e="/";return t.join(e).replace(new RegExp(e+"{1,}","g"),e)}function S(t,e){var i;let r=this.app.workspace.getActiveFile();e=e.replace(/\{\{title\}\}/g,(i=r.basename)!=null?i:"");let n=/\{\{date(?::(.*?))?\}\}/g,o="YYYY-MM-DD";e=e.replace(n,(u,s)=>{let c=(s==null?void 0:s.trim())||t.options.dateFormat||o;return window.moment().format(c)});let p=/\{\{time(?::(.*?))?\}\}/g,a="HH:mm";return e=e.replace(p,(u,s)=>{let c=(s==null?void 0:s.trim())||t.options.timeFormat||a;return window.moment().format(c)}),e}

/* nosourcemap */